#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def test_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = 'instance/gossip.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É user
        print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã user:")
        cursor.execute("PRAGMA table_info(user)")
        user_columns = [column[1] for column in cursor.fetchall()]
        
        required_user_fields = [
            'id', 'username', 'password', 'date_registered', 
            'is_moderator', 'is_verified', 'is_bot', 'reputation', 
            'description', 'gossip_coins', 'pinned_gossip_id', 
            'active_decoration_id', 'notify_on_like', 'notify_on_comment', 
            'last_seen', 'has_used_free_enhancement'
        ]
        
        for field in required_user_fields:
            if field in user_columns:
                print(f"  ‚úÖ {field}")
            else:
                print(f"  ‚ùå {field} - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É gossip
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã gossip:")
        cursor.execute("PRAGMA table_info(gossip)")
        gossip_columns = [column[1] for column in cursor.fetchall()]
        
        required_gossip_fields = [
            'id', 'title', 'content', 'date_posted', 'user_id', 
            'likes', 'comments', 'is_pinned', 'is_ai_enhanced', 'ai_enhanced_at'
        ]
        
        for field in required_gossip_fields:
            if field in gossip_columns:
                print(f"  ‚úÖ {field}")
            else:
                print(f"  ‚ùå {field} - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == '__main__':
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    test_database_structure()
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
